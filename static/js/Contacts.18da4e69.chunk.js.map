{"version":3,"sources":["components/Section/Section.module.css","components/Section/Section.jsx","components/InputField/InputField.module.css","components/InputField/InputField.jsx","components/Contacts/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Contacts/ContactList/ContactList.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Contacts/ContactForm/checkingContact.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactForm/ContactForm.container.js","components/Filter/Filter.jsx","components/Filter/Filter.container.js","components/Contacts/ContactItem/ContactItem.jsx","components/Contacts/ContactItem/ContactItem.container.js","components/Contacts/ContactList/ContactList.jsx","components/Contacts/ContactList/ContactList.container.js","views/Contacts/Contacts.jsx","views/Contacts/Contacts.container.js"],"names":["module","exports","Section","title","children","customClass","className","s","InputField","labelName","type","name","value","handler","label","input","onChange","evt","target","getRequest","actions","getSuccess","getError","addedRequest","addedSuccess","addedError","deleteRequest","deleteSuccess","deleteError","axios","defaults","baseURL","operations","getContacts","dispatch","get","then","data","catch","error","addedContact","contact","post","toast","success","number","deleteContact","id","delete","filterValue","state","contacts","filter","isloading","loading","filteredContacts","createSelector","items","el","toLowerCase","includes","store","persistedStore","ContactForm","onAddedContact","setFilter","useState","setName","setNumber","handleSubmit","preventDefault","isCheckedContact","getState","find","warn","checkingContact","onSubmit","form","overlay","Button","variant","color","size","startIcon","connect","newContact","Filter","onReset","IconButton","aria-label","onClick","resetFilter","ContactItem","onDeleteContact","listItem","fullName","ContactList","container","map","Contacts","isAuthorization","useEffect","Container","Loader","to","mapDispatchToProps","authSelectors","getIsAuthorization"],"mappings":"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","file":"static/js/Contacts.18da4e69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1tqr1\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children, customClass = '' }) {\r\n  return (\r\n    <section className={customClass && customClass}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n  customClass: PropTypes.any,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"InputField_label__34Nki\",\"input\":\"InputField_input__32gyy\"};","import PropTypes from 'prop-types';\r\nimport s from './InputField.module.css';\r\n\r\nconst InputField = ({ labelName, type, name, value, handler }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      <span>{labelName}</span>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={s.input}\r\n        value={value}\r\n        onChange={evt => handler(evt.target.value)}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nInputField.propTypes = {\r\n  labelName: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  handler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default InputField;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3RsOF\",\"overlay\":\"ContactForm_overlay__ithOz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2w4sL\",\"label\":\"Filter_label__3SrdN\",\"input\":\"Filter_input__2jPPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactItem_listItem__l3gc2\",\"fullName\":\"ContactItem_fullName__3s-xt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1aKlu\"};","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n} = actions;\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      dispatch(getSuccess(data));\r\n    })\r\n    .catch(error => dispatch(getError(error)));\r\n};\r\n\r\nconst addedContact = contact => dispatch => {\r\n  dispatch(addedRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => {\r\n      dispatch(addedSuccess(data));\r\n      toast.success(\r\n        `Contact \"${data.name}\" with number \"${data.number}\" has been successfully created`,\r\n      );\r\n    })\r\n    .catch(error => dispatch(addedError(error)));\r\n};\r\n\r\nconst deleteContact = ({ id, name }) => dispatch => {\r\n  dispatch(deleteRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(deleteSuccess(id));\r\n      toast.success(`Contact \"${name}\" successfully deleted`);\r\n    })\r\n    .catch(error => dispatch(deleteError(error)));\r\n};\r\n\r\nconst operations = {\r\n  getContacts,\r\n  addedContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default operations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const allContacts = state => state.contacts.items;\r\nexport const filterValue = state => state.contacts.filter;\r\nexport const isloading = state => state.contacts.loading;\r\nexport const filteredContacts = createSelector(\r\n  [allContacts, filterValue],\r\n  (contacts, filter) =>\r\n    contacts.filter(el => el.name.toLowerCase().includes(filter.toLowerCase())),\r\n);\r\n","import { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport persistedStore from 'redux/store';\r\n\r\nconst { store } = persistedStore;\r\n\r\nexport default function checkingContact(name, number, setFilter) {\r\n  if (!name) {\r\n    toast.error('the \"Name\" field must contain the name of the contact');\r\n    return;\r\n  } else if (!number) {\r\n    toast.error('the \"Number\" field must contain the contact number');\r\n    return;\r\n  }\r\n\r\n  const prevState = store.getState().contacts.items;\r\n  const contactFound = prevState.find(el => el.name === name);\r\n\r\n  if (contactFound) {\r\n    toast.warn(`\"${name}\" is already in contacts`);\r\n    setFilter(name);\r\n    return;\r\n  }\r\n\r\n  return { name, number };\r\n}\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AddOutlinedIcon from '@material-ui/icons/AddOutlined';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport checkingContact from './checkingContact';\r\n\r\nimport InputField from 'components/InputField';\r\n\r\nconst ContactForm = ({ onAddedContact, setFilter }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    const isCheckedContact = checkingContact(name, number, setFilter);\r\n    setName('');\r\n    setNumber('');\r\n\r\n    if (isCheckedContact) onAddedContact(isCheckedContact);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={evt => handleSubmit(evt)} className={s.form}>\r\n      <div className={s.overlay}>\r\n        <InputField\r\n          labelName=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          handler={setName}\r\n        />\r\n        <InputField\r\n          labelName=\"Number\"\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={number}\r\n          handler={setNumber}\r\n        />\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        startIcon={<AddOutlinedIcon />}\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddedContact: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { connect } from 'react-redux';\r\nimport { operations, actions } from 'redux/contacts';\r\n\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddedContact: newContact => dispatch(operations.addedContact(newContact)),\r\n    setFilter: value => dispatch(actions.setFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RotateLeftOutlinedIcon from '@material-ui/icons/RotateLeftOutlined';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, setFilter, onReset }) => {\r\n  return (\r\n    <div className={s.filter}>\r\n      <label>\r\n        <span className={s.label}>Filter</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={s.input}\r\n          value={filter}\r\n          onChange={evt => setFilter(evt.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        onClick={() => {\r\n          onReset();\r\n          toast.success('Filter cleaned successfully');\r\n        }}\r\n      >\r\n        {filter && <RotateLeftOutlinedIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport { actions, filterValue } from 'redux/contacts';\r\n\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: filterValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setFilter: value => dispatch(actions.setFilter(value)),\r\n    onReset: () => dispatch(actions.resetFilter('')),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ contact, onDeleteContact }) => {\r\n  const { name, number } = contact;\r\n  return (\r\n    <li className={s.listItem}>\r\n      <div className={s.fullName}>\r\n        <span>{name}: </span>\r\n        <span>{number}</span>\r\n      </div>\r\n      <IconButton aria-label=\"Delete\" onClick={() => onDeleteContact(contact)}>\r\n        <DeleteIcon />\r\n      </IconButton>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  }).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { connect } from 'react-redux';\r\nimport { operations } from 'redux/contacts';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDeleteContact: contact => dispatch(operations.deleteContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n","import PropTypes from 'prop-types';\r\n\r\nimport ContactItem from 'components/Contacts/ContactItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul className={s.container}>\r\n      {contacts.map(el => (\r\n        <ContactItem contact={el} key={el.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport { filteredContacts } from 'redux/contacts';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: filteredContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { useEffect } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactForm from 'components/Contacts/ContactForm';\r\nimport Filter from 'components/Filter';\r\nimport ContactList from 'components/Contacts/ContactList';\r\nimport Container from 'components/Container';\r\nimport Section from 'components/Section';\r\nimport Loader from 'components/Loader';\r\n\r\nconst Contacts = ({ loading, getContacts, isAuthorization }) => {\r\n  useEffect(() => {\r\n    if (isAuthorization) getContacts();\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <Container>\r\n      {loading && <Loader />}\r\n      {isAuthorization ? (\r\n        <>\r\n          <Section title=\"Added Form\">\r\n            <ContactForm />\r\n          </Section>\r\n\r\n          <Section title=\"Contacts\">\r\n            <div>\r\n              <Filter />\r\n              <ContactList />\r\n            </div>\r\n          </Section>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  getContacts: PropTypes.func.isRequired,\r\n  isAuthorization: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import { connect } from 'react-redux';\r\n\r\nimport { operations, isloading } from 'redux/contacts';\r\nimport { authSelectors } from 'redux/auth';\r\nimport Contacts from './Contacts';\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: isloading(state),\r\n  isAuthorization: authSelectors.getIsAuthorization(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getContacts: operations.getContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n"],"sourceRoot":""}