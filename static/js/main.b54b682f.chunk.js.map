{"version":3,"sources":["data/routes.js","components/UserMenu/UserMenu.jsx","components/NavBar/NavBar.jsx","App.jsx","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducers.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.module.css","components/Loader/Loader.jsx","redux/contacts/contacts-reducers.js","redux/store.js","components/NavBar/NavBar.module.css","components/Container/Container.jsx","components/Container/Container.module.css","components/Loader/Loader.module.css"],"names":["routes","path","label","component","lazy","exact","mapDispatchToProps","logOut","authOperations","connect","state","userName","authSelectors","getUsername","userEmail","getUserEmail","className","s","container","welcome","userAvatar","to","logout","onClick","isAuthorization","getIsAuthorization","nav","logo","getUserData","getCurrentUser","useEffect","Container","fallback","Loader","map","Component","ReactDOM","render","StrictMode","store","persistedStore","loading","persistor","document","getElementById","actions","getRequest","createAction","getSuccess","getError","addedRequest","addedSuccess","addedError","deleteRequest","deleteSuccess","deleteError","setFilter","resetFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","operations","register","userData","dispatch","a","post","response","data","message","logIn","getState","persistedToken","auth","get","selectors","Boolean","module","exports","Loading","type","color","height","width","items","filter","el","id","contactsReducer","persistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","configureStore","reducer","persistReducer","authReducers","contacts","devTools","process","persistStore","children"],"mappings":"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","file":"static/js/main.b54b682f.chunk.js","sourcesContent":["import { lazy } from 'react';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('views/HomePage' /* webpackChunkName: \"HomePage\" */),\r\n);\r\nconst Registrations = lazy(() =>\r\n  import('views/Registration' /* webpackChunkName: \"Registrations\" */),\r\n);\r\nconst Login = lazy(() => import('views/Login' /* webpackChunkName: \"Login\" */));\r\n\r\nconst Contacts = lazy(() =>\r\n  import('views/Contacts' /* webpackChunkName: \"Contacts\" */),\r\n);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    label: 'Home Page',\r\n    component: HomePage,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: '/register',\r\n    label: 'Registration',\r\n    component: Registrations,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: '/login',\r\n    label: 'Login',\r\n    component: Login,\r\n    exact: false,\r\n  },\r\n  {\r\n    path: '/contacts',\r\n    label: 'Contacts',\r\n    component: Contacts,\r\n    exact: false,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { authOperations, authSelectors } from 'redux/auth';\r\n\r\nimport s from './UserMenu.module.css';\r\n\r\nconst UserMenu = ({ userName, userEmail, logOut }) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <p className={s.welcome}>\r\n        Welcome, <AccountCircle className={s.userAvatar} />\r\n        <span className={s.userName}>{` ${userName} (${userEmail})`}</span>\r\n      </p>\r\n      <NavLink to=\"/\" className={s.logout}>\r\n        <ExitToAppIcon onClick={() => logOut()} />\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  userName: PropTypes.string.isRequired,\r\n  userEmail: PropTypes.string.isRequired,\r\n  logOut: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userName: authSelectors.getUsername(state),\r\n  userEmail: authSelectors.getUserEmail(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logOut: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './NavBar.module.css';\r\nimport { authSelectors } from 'redux/auth';\r\n\r\nimport UserMenu from 'components/UserMenu';\r\n\r\nconst NavBar = ({ isAuthorization }) => {\r\n  return (\r\n    <nav className={s.nav}>\r\n      <h1 className={s.logo}>Phonebook</h1>\r\n      {isAuthorization && <UserMenu />}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  isAuthorization: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthorization: authSelectors.getIsAuthorization(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import { Suspense, useEffect } from 'react';\r\nimport Container from 'components/Container';\r\nimport Loader from 'components/Loader';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport routes from 'data/routes';\r\nimport { connect } from 'react-redux';\r\nimport { authOperations } from 'redux/auth';\r\nimport NavBar from 'components/NavBar';\r\n\r\nconst App = ({ getUserData }) => {\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, []); // eslint-disable-line\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar />\r\n      <Suspense fallback={<Loader />}>\r\n        <Switch>\r\n          {routes.map(({ path, exact, component: Component }) => (\r\n            <Route key={path} path={path} exact={exact} component={Component} />\r\n          ))}\r\n          {/* <Route component={<h1>404 Page Not Found</h1>} /> */}\r\n        </Switch>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getUserData: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport persistedStore from 'redux/store';\nimport Loader from 'components/Loader';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={persistedStore.store}>\n      <PersistGate loading={<Loader />} persistor={persistedStore.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst getRequest = createAction('contacts/getRequest');\r\nconst getSuccess = createAction('contacts/getSucess');\r\nconst getError = createAction('contacts/getError');\r\n\r\nconst addedRequest = createAction('contacts/addedRequest');\r\nconst addedSuccess = createAction('contacts/addedSucess');\r\nconst addedError = createAction('contacts/addedError');\r\n\r\nconst deleteRequest = createAction('contacts/deleteRequest');\r\nconst deleteSuccess = createAction('contacts/deleteSucess');\r\nconst deleteError = createAction('contacts/deleteError');\r\n\r\nconst setFilter = createAction('filter/set');\r\nconst resetFilter = createAction('filter/reset');\r\n\r\nconst actions = {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n};\r\n\r\nexport default actions;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst actions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default actions;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = userData => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = userData => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', userData);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst operations = { register, logOut, logIn, getCurrentUser };\r\n\r\nexport default operations;\r\n","const getIsAuthorization = state => Boolean(state.auth.token);\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getUserEmail = state => state.auth.user.email;\r\n\r\nconst selectors = {\r\n  getIsAuthorization,\r\n  getUsername,\r\n  getUserEmail,\r\n};\r\n\r\nexport default selectors;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__3kTNA\",\"logout\":\"UserMenu_logout__2yiNM\",\"welcome\":\"UserMenu_welcome__31pvp\",\"userName\":\"UserMenu_userName__2_ops\",\"userAvatar\":\"UserMenu_userAvatar__2AS2e\"};","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className={s.container}>\r\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst {\r\n  getRequest,\r\n  getSuccess,\r\n  getError,\r\n\r\n  addedRequest,\r\n  addedSuccess,\r\n  addedError,\r\n\r\n  deleteRequest,\r\n  deleteSuccess,\r\n  deleteError,\r\n\r\n  setFilter,\r\n  resetFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [getSuccess]: (_, { payload }) => payload,\r\n  [addedSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteSuccess]: (state, { payload }) => [\r\n    ...state.filter(el => el.id !== payload),\r\n  ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [setFilter]: (_, { payload }) => payload,\r\n  [resetFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getRequest]: () => true,\r\n  [getSuccess]: () => false,\r\n  [getError]: () => false,\r\n\r\n  [addedRequest]: () => true,\r\n  [addedSuccess]: () => false,\r\n  [addedError]: () => false,\r\n\r\n  [deleteRequest]: () => true,\r\n  [deleteSuccess]: () => false,\r\n  [deleteError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// import logger from 'redux-logger';\r\n\r\nimport contactsReducer from './contacts/contacts-reducers';\r\nimport { authReducers } from './auth';\r\n\r\nconst persistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token', 'user'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(persistConfig, authReducers),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst persistedStore = { store, persistor };\r\n\r\nexport default persistedStore;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3W1WN\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__63Zye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2wZhl\"};"],"sourceRoot":""}