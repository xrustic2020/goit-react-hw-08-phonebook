{"version":3,"sources":["../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx","../node_modules/@material-ui/icons/AddOutlined.js","../node_modules/@material-ui/icons/RotateLeftOutlined.js","../node_modules/@material-ui/icons/Delete.js","../node_modules/@material-ui/core/esm/IconButton/IconButton.js"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","children","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","node","duration","height","style","requestAnimationFrame","setTimeout","collapseToast","useLayoutEffect","onEnter","useEffect","onExited","onExit","React","eventManager","list","emitQueue","on","this","set","event","off","cb","get","cancelEmit","timers","emit","args","timer","callback","useKeeper","arg","refresh","ref","reducer","state","action","id","useToastContainer","props","forceUpdate","useReducer","x","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","limit","enableMultiContainer","type","appendToast","toastContent","toastProps","staleId","delay","options","updateId","isNotValid","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","transition","className","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","i","removeFromCollection","cloneElement","getToastToRender","toastToRender","toastList","Object","p","getX","e","getY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","Math","document","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","classNames","animationEvent","Toast","Transition","cssClasses","isProgressControlled","renderCloseButton","Bounce","ToastContainer","containerStyle","pointerEvents","getClassName","newestOnTop","containers","lazy","generateToastId","getToastId","dispatchToast","containerDomNode","render","mergeOptions","createToastByType","params","container","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","value","default","_default","createElement","IconButton","_props$edge","edge","classes","_props$color","color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","label","withStyles","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","active","transitions","create","shortest","backgroundColor","fade","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","name"],"mappings":"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","file":"static/js/8.e91fa8ed.chunk.js","sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered() {\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.dark = createToastByType(TYPE.DARK);\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.11 8.53L5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47zM6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47zm1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03L7.1 18.32zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93z\"\n}), 'RotateLeftOutlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = /*#__PURE__*/React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return /*#__PURE__*/React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);"],"sourceRoot":""}